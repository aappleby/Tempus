list[14]
  [0] : MarkerNode{}
    .name : LEX_IDENT consts
  [1] : AtomNode{}
    .name : IdentNode[1]
      [0] : LEX_IDENT max_delay
    .dir : LEX_DECLOP >:
    .type : TypeNode{}
      .base : IdentNode[1]
        [0] : LEX_IDENT int
    .eq : LEX_ASSIGNOP =
    .val : ExprNode[1]
      [0] : LEX_INT 20
  [2] : AtomNode{}
    .name : IdentNode[1]
      [0] : LEX_IDENT max_cursor
    .dir : LEX_DECLOP >:
    .type : TypeNode{}
      .base : IdentNode[1]
        [0] : LEX_IDENT int
    .eq : LEX_ASSIGNOP =
    .val : ExprNode[3]
      [0] : CatNode(2)
        (0) : IdentNode[1]
          [0] : LEX_IDENT len
        (1) : ParenNode(1)
          (0) : ExprNode[1]
            [0] : IdentNode[1]
              [0] : LEX_IDENT text
      [1] : LEX_BINOP -
      [2] : LEX_INT 1
  [3] : AtomNode{}
    .name : IdentNode[1]
      [0] : LEX_IDENT filename
    .dir : LEX_DECLOP >:
    .type : TypeNode{}
      .base : IdentNode[1]
        [0] : LEX_IDENT string
    .eq : LEX_ASSIGNOP =
    .val : ExprNode[1]
      [0] : LEX_STRING "ping.hex"
  [4] : AtomNode{}
    .name : IdentNode[1]
      [0] : LEX_IDENT text
    .dir : LEX_DECLOP >:
    .type : TypeNode{}
      .base : IdentNode[1]
        [0] : LEX_IDENT u8
      .suffix : BrackNode(0)
    .eq : LEX_ASSIGNOP =
    .val : ExprNode[1]
      [0] : CatNode(2)
        (0) : IdentNode[1]
          [0] : LEX_IDENT read
        (1) : ParenNode(1)
          (0) : ExprNode[1]
            [0] : IdentNode[1]
              [0] : LEX_IDENT filename
  [5] : MarkerNode{}
    .name : LEX_IDENT ports
  [6] : AtomNode{}
    .name : IdentNode[4]
      [0] : LEX_PUNCT .
      [1] : LEX_IDENT dst
      [2] : LEX_PUNCT .
      [3] : LEX_IDENT data
    .dir : LEX_DECLOP :>
    .type : TypeNode{}
      .base : IdentNode[1]
        [0] : LEX_IDENT u8
    .eq : LEX_ASSIGNOP =
    .val : ExprNode[1]
      [0] : CatNode(2)
        (0) : IdentNode[1]
          [0] : LEX_IDENT text
        (1) : BrackNode(1)
          (0) : ExprNode[1]
            [0] : IdentNode[1]
              [0] : LEX_IDENT cursor
  [7] : AtomNode{}
    .name : IdentNode[4]
      [0] : LEX_PUNCT .
      [1] : LEX_IDENT dst
      [2] : LEX_PUNCT .
      [3] : LEX_IDENT valid
    .dir : LEX_DECLOP :>
    .type : TypeNode{}
      .base : IdentNode[1]
        [0] : LEX_IDENT u1
    .eq : LEX_ASSIGNOP =
    .val : ExprNode[3]
      [0] : IdentNode[1]
        [0] : LEX_IDENT delay
      [1] : LEX_BINOP ==
      [2] : LEX_INT 0
  [8] : AtomNode{}
    .name : IdentNode[4]
      [0] : LEX_PUNCT .
      [1] : LEX_IDENT dst
      [2] : LEX_PUNCT .
      [3] : LEX_IDENT ready
    .dir : LEX_DECLOP >:
    .type : TypeNode{}
      .base : IdentNode[1]
        [0] : LEX_IDENT u1
  [9] : MarkerNode{}
    .name : LEX_IDENT state
  [10] : AtomNode{}
    .name : IdentNode[1]
      [0] : LEX_IDENT delay
    .dir : LEX_DECLOP :
    .type : TypeNode{}
      .base : CallNode{}
        .func : IdentNode[1]
          [0] : LEX_IDENT counter
        .params : ParenNode(1)
          (0) : ExprNode[1]
            [0] : IdentNode[1]
              [0] : LEX_IDENT max_delay
    .eq : LEX_ASSIGNOP =
    .val : ExprNode[1]
      [0] : IdentNode[1]
        [0] : LEX_IDENT max_delay
  [11] : AtomNode{}
    .name : IdentNode[1]
      [0] : LEX_IDENT cursor
    .dir : LEX_DECLOP :
    .type : TypeNode{}
      .base : CallNode{}
        .func : IdentNode[1]
          [0] : LEX_IDENT counter
        .params : ParenNode(1)
          (0) : ExprNode[1]
            [0] : IdentNode[1]
              [0] : LEX_IDENT max_cursor
    .eq : LEX_ASSIGNOP =
    .val : ExprNode[1]
      [0] : LEX_INT 0
  [12] : MarkerNode{}
    .name : LEX_IDENT update
  [13] : BranchNode[2]
    [0] : CondNode{}
      .condition : ParenNode(1)
        (0) : ExprNode[1]
          [0] : IdentNode[1]
            [0] : LEX_IDENT delay
      .then : AtomNode{}
        .name : IdentNode[2]
          [0] : LEX_PUNCT @
          [1] : LEX_IDENT delay
        .eq : LEX_ASSIGNOP =
        .val : ExprNode[3]
          [0] : IdentNode[1]
            [0] : LEX_IDENT delay
          [1] : LEX_BINOP -
          [2] : LEX_INT 1
    [1] : CondNode{}
      .condition : ParenNode(1)
        (0) : ExprNode[1]
          [0] : IdentNode[3]
            [0] : LEX_IDENT dst
            [1] : LEX_PUNCT .
            [2] : LEX_IDENT ready
      .then : BlockNode[1]
        [0] : BranchNode[2]
          [0] : CondNode{}
            .condition : ParenNode(1)
              (0) : ExprNode[3]
                [0] : IdentNode[1]
                  [0] : LEX_IDENT cursor
                [1] : LEX_BINOP ==
                [2] : IdentNode[1]
                  [0] : LEX_IDENT max_cursor
            .then : BlockNode[2]
              [0] : AtomNode{}
                .name : IdentNode[2]
                  [0] : LEX_PUNCT @
                  [1] : LEX_IDENT cursor
                .eq : LEX_ASSIGNOP =
                .val : ExprNode[1]
                  [0] : LEX_INT 0
              [1] : AtomNode{}
                .name : IdentNode[2]
                  [0] : LEX_PUNCT @
                  [1] : LEX_IDENT delay
                .eq : LEX_ASSIGNOP =
                .val : ExprNode[1]
                  [0] : IdentNode[1]
                    [0] : LEX_IDENT max_delay
          [1] : CondNode{}
            .condition : <None>
            .then : AtomNode{}
              .name : IdentNode[2]
                [0] : LEX_PUNCT @
                [1] : LEX_IDENT cursor
              .eq : LEX_ASSIGNOP =
              .val : ExprNode[3]
                [0] : IdentNode[1]
                  [0] : LEX_IDENT cursor
                [1] : LEX_BINOP +
                [2] : LEX_INT 1