list[3]
  [0] : AtomNode{}
    .name : IdentNode[1]
      [0] : LEX_IDENT max
    .eq : LEX_ASSIGNOP =
    .val : ExprNode[1]
      [0] : CatNode(2)
        (0) : ParenNode(2)
          (0) : AtomNode{}
            .name : IdentNode[1]
              [0] : LEX_IDENT a
            .dir : LEX_DECLOP >:
            .type : TypeNode{}
              .base : IdentNode[1]
                [0] : LEX_IDENT int
          (1) : AtomNode{}
            .name : IdentNode[1]
              [0] : LEX_IDENT b
            .dir : LEX_DECLOP >:
            .type : TypeNode{}
              .base : IdentNode[1]
                [0] : LEX_IDENT int
        (1) : BlockNode[1]
          [0] : BranchNode[2]
            [0] : CondNode{}
              .condition : ParenNode(1)
                (0) : ExprNode[3]
                  [0] : IdentNode[1]
                    [0] : LEX_IDENT a
                  [1] : LEX_BINOP >
                  [2] : IdentNode[1]
                    [0] : LEX_IDENT b
              .then : AtomNode{}
                .name : IdentNode[1]
                  [0] : LEX_PUNCT .
                .eq : LEX_ASSIGNOP =
                .val : ExprNode[1]
                  [0] : IdentNode[1]
                    [0] : LEX_IDENT a
            [1] : CondNode{}
              .condition : <None>
              .then : AtomNode{}
                .name : IdentNode[1]
                  [0] : LEX_PUNCT .
                .eq : LEX_ASSIGNOP =
                .val : ExprNode[1]
                  [0] : IdentNode[1]
                    [0] : LEX_IDENT b
  [1] : AtomNode{}
    .name : IdentNode[1]
      [0] : LEX_IDENT max_or_3
    .eq : LEX_ASSIGNOP =
    .val : ExprNode[1]
      [0] : CatNode(2)
        (0) : IdentNode[1]
          [0] : LEX_IDENT max
        (1) : ParenNode(2)
          (0) : ExprNode[1]
            [0] : IdentNode[1]
              [0] : LEX_IDENT _
          (1) : AtomNode{}
            .name : IdentNode[1]
              [0] : LEX_IDENT b
            .eq : LEX_ASSIGNOP =
            .val : ExprNode[1]
              [0] : LEX_INT 3
  [2] : AtomNode{}
    .name : IdentNode[1]
      [0] : LEX_IDENT blah
    .eq : LEX_ASSIGNOP =
    .val : ExprNode[1]
      [0] : CatNode(2)
        (0) : IdentNode[1]
          [0] : LEX_IDENT max_or_3
        (1) : ParenNode(1)
          (0) : ExprNode[1]
            [0] : LEX_INT 100